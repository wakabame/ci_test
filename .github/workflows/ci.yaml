name: "Sample CI"

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  # 1. 差分チェック用ジョブ
  check_changed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check if src/*.jl or test/*.jl changed
        id: diff
        run: |
          # git diff の比較対象をどうするかは運用に合わせて調整してください
          # 例として HEAD~1 と HEAD を比較
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)

          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          # 特定パターンに合致するかどうかを判定
          if echo "$CHANGED_FILES" | grep -E '^(src/.*\.jl|test/.*\.jl)'; then
            echo "::set-output name=changed::true"
          else
            echo "::set-output name=changed::false"
          fi

  # 2. 実際のCIを実行するジョブ
  #    ファイル変更があったときだけ動かす (changed == 'true')
  job2:
    name: "ci"  # ← Pull Request 上では "ci" というチェック名で表示される
    runs-on: ubuntu-latest
    needs: [check_changed]
    if: needs.check_changed.outputs.diff.changed == 'true'
    steps:
      - run: echo "ここにビルドやテストなどの本処理を追加"
      # 例: 
      # - run: make build
      # - run: make test

  # 3. 変更がなかったとき専用のジョブ
  #    特に何もせず成功終了させる (changed == 'false')
  job3:
    name: "ci"  # ← job2 と同じチェック名
    runs-on: ubuntu-latest
    needs: [check_changed]
    if: needs.check_changed.outputs.diff.changed == 'false'
    steps:
      - run: echo "変更がなかったのでスキップしますが、チェックは成功とします。"
